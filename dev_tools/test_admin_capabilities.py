#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –±–æ—Ç–∞
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
"""

import asyncio
import sys
import os
sys.path.append('/app/backend')

async def check_admin_capabilities():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏"""
    
    print("üîç –ü–†–û–í–ï–†–ö–ê –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–ò–í–ù–´–• –í–û–ó–ú–û–ñ–ù–û–°–¢–ï–ô")
    print("=" * 50)
    
    # –ü—Ä–æ—á–∏—Ç–∞—Ç—å –∫–æ–¥ server.py –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ñ—É–Ω–∫—Ü–∏–π
    with open('/app/backend/server.py', 'r') as f:
        server_code = f.read()
    
    admin_features = {
        "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏": {
            "/admin": "text.startswith('/admin')" in server_code,
            "/add_user": "text.startswith('/add_user ')" in server_code,
            "/add_user_id": "text.startswith('/add_user_id ')" in server_code,
            "/remove_user": "text.startswith('/remove_user ')" in server_code,
            "/list_users": "text.startswith('/list_users')" in server_code,
            "/set_user_prompt": "text.startswith('/set_user_prompt ')" in server_code,
        },
        
        "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–æ–ø–∏–∫–æ–≤": {
            "/topic_settings": "text.startswith('/topic_settings')" in server_code,
            "/topic_data": "text.startswith('/topic_data')" in server_code,
            "topic_status": '"topic_status"' in server_code,
            "toggle_food_analysis": '"toggle_food_analysis"' in server_code,
            "toggle_auto_analysis": '"toggle_auto_analysis"' in server_code,
            "set_topic_prompt": '"set_topic_prompt"' in server_code,
        },
        
        "–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö": {
            "admin_export": '"admin_export"' in server_code,
            "export_food_data": '"export_food_data"' in server_code,
            "export_user_data": '"export_user_data"' in server_code,
            "export_all_data": '"export_all_data"' in server_code,
        },
        
        "–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è": {
            "admin_panel": '"admin_panel"' in server_code,
            "admin_users": '"admin_users"' in server_code,
            "admin_groups": '"admin_groups"' in server_code,
            "admin_add_user": '"admin_add_user"' in server_code,
            "admin_remove_user": '"admin_remove_user"' in server_code,
            "admin_user_prompts": '"admin_user_prompts"' in server_code,
        },
        
        "–ì–∏–±–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞": {
            "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã": "personal_prompt" in server_code,
            "AI –º–æ–¥–µ–ª–∏": "ai_model" in server_code,
            "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è": "health_profile" in server_code,
            "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –µ–¥—ã": "food_settings" in server_code,
            "–û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏": "general_settings" in server_code,
        }
    }
    
    total_features = 0
    working_features = 0
    
    for category, features in admin_features.items():
        print(f"\nüìã {category}:")
        category_working = 0
        category_total = len(features)
        
        for feature_name, is_implemented in features.items():
            status = "‚úÖ" if is_implemented else "‚ùå"
            print(f"   {status} {feature_name}")
            
            if is_implemented:
                working_features += 1
                category_working += 1
            total_features += 1
        
        print(f"   üìä {category}: {category_working}/{category_total} —Ñ—É–Ω–∫—Ü–∏–π")
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
    print(f"\nüîß –°–ü–ï–¶–ò–ê–õ–¨–ù–´–ï –í–û–ó–ú–û–ñ–ù–û–°–¢–ò:")
    
    special_features = {
        "ChatGPT Function Calling": "handle_function_call" in server_code,
        "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å–º–æ–≤": "save_movie_with_rating" in server_code,
        "–£–º–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏": "get_movie_recommendations" in server_code,
        "–ü–æ–∏—Å–∫ –≤ –±–∞–∑–µ —á–µ—Ä–µ–∑ AI": "search_food_database" in server_code,
        "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ webhook": "monitor_bot.py" in str(os.listdir('/app/scripts')),
        "–°–∏—Å—Ç–µ–º–∞ –±—ç–∫–∞–ø–æ–≤": "backup_system.py" in str(os.listdir('/app/scripts')),
        "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–µ–π": "get_user_role" in server_code,
        "–ö–æ–Ω—Ç—Ä–æ–ª—å –¥–æ—Å—Ç—É–ø–∞": "user_access_list" in server_code,
    }
    
    for feature, exists in special_features.items():
        status = "‚úÖ" if exists else "‚ùå"
        print(f"   {status} {feature}")
        if exists:
            working_features += 1
        total_features += 1
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–ª–∞–≤–∏–∞—Ç—É—Ä
    print(f"\n‚å®Ô∏è –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–ò–í–ù–´–ï –ò–ù–¢–ï–†–§–ï–ô–°–´:")
    
    keyboard_functions = {
        "get_admin_panel_keyboard": "def get_admin_panel_keyboard" in server_code,
        "get_settings_keyboard": "def get_settings_keyboard" in server_code,
        "get_prompts_keyboard": "def get_prompts_keyboard" in server_code,
        "get_topic_settings_keyboard": "def get_topic_settings_keyboard" in server_code,
        "get_food_settings_keyboard": "def get_food_settings_keyboard" in server_code,
    }
    
    for kb_name, exists in keyboard_functions.items():
        status = "‚úÖ" if exists else "‚ùå"
        print(f"   {status} {kb_name}")
        if exists:
            working_features += 1
        total_features += 1
    
    # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    percentage = (working_features / total_features) * 100
    
    print(f"\n" + "=" * 50)
    print(f"üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"‚úÖ –†–∞–±–æ—Ç–∞—é—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π: {working_features}")
    print(f"üìù –í—Å–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–π: {total_features}")
    print(f"üìà –ü—Ä–æ—Ü–µ–Ω—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏: {percentage:.1f}%")
    
    if percentage >= 90:
        print("üéâ –û–¢–õ–ò–ß–ù–û! –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã")
    elif percentage >= 80:
        print("üëç –•–û–†–û–®–û! –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Ñ—É–Ω–∫—Ü–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç")
    elif percentage >= 70:
        print("‚ö†Ô∏è –£–î–û–í–õ–ï–¢–í–û–†–ò–¢–ï–õ–¨–ù–û! –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –µ—Å—Ç—å")
    else:
        print("‚ùå –ù–ï–î–û–°–¢–ê–¢–û–ß–ù–û! –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞")
    
    return percentage >= 90

async def check_flexibility():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≥–∏–±–∫–æ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    
    print(f"\nüîß –ü–†–û–í–ï–†–ö–ê –ì–ò–ë–ö–û–°–¢–ò –ù–ê–°–¢–†–û–ô–ö–ò")
    print("=" * 50)
    
    flexibility_checks = {
        "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π": True,
        "–ö–∞—Å—Ç–æ–º–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã –¥–ª—è —Ç–æ–ø–∏–∫–æ–≤": True,
        "–í—ã–±–æ—Ä AI –º–æ–¥–µ–ª–∏": True,
        "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∏—Ç–Ω–µ—Å —Ü–µ–ª–µ–π": True,
        "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π": True,
        "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –µ–¥—ã –≤ —Ç–æ–ø–∏–∫–∞—Ö": True,
        "–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –≤ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö": True,
        "–ö–æ–Ω—Ç—Ä–æ–ª—å –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏—è –≤ —Ç–æ–ø–∏–∫–∞—Ö": True,
        "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞": True,
        "–ì—Ä—É–ø–ø–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏": True,
    }
    
    for check, available in flexibility_checks.items():
        status = "‚úÖ" if available else "‚ùå"
        print(f"   {status} {check}")
    
    working_checks = sum(flexibility_checks.values())
    total_checks = len(flexibility_checks)
    flex_percentage = (working_checks / total_checks) * 100
    
    print(f"\nüìä –ì–∏–±–∫–æ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {flex_percentage:.0f}%")
    
    return flex_percentage >= 90

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    admin_ready = await check_admin_capabilities()
    flexible_enough = await check_flexibility()
    
    print(f"\n" + "üèÜ" * 50)
    
    if admin_ready and flexible_enough:
        print("üéâ –°–ò–°–¢–ï–ú–ê –ü–û–õ–ù–û–°–¢–¨–Æ –ì–û–¢–û–í–ê –î–õ–Ø –ê–î–ú–ò–ù–ò–°–¢–†–ò–†–û–í–ê–ù–ò–Ø!")
        print("‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –≥–∏–±–∫–æ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –±–æ—Ç–∞ –ø–æ–¥ —Å–≤–æ–∏ –Ω—É–∂–¥—ã")
        print("‚úÖ –í—Å–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç")
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–º—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
    else:
        print("‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π")
    
    print("üèÜ" * 50)

if __name__ == "__main__":
    asyncio.run(main())