import React, { useState, useEffect } from 'react';
import './App.css';

function App() {
  const [botStatus, setBotStatus] = useState('checking');
  const [stats, setStats] = useState(null);
  const [loading, setLoading] = useState(true);

  const backendUrl = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8001';

  useEffect(() => {
    checkBotStatus();
    // Update status every 30 seconds
    const interval = setInterval(checkBotStatus, 30000);
    return () => clearInterval(interval);
  }, []);

  const checkBotStatus = async () => {
    try {
      const response = await fetch(`${backendUrl}/api/health`);
      if (response.ok) {
        setBotStatus('online');
      } else {
        setBotStatus('offline');
      }
    } catch (error) {
      setBotStatus('offline');
    } finally {
      setLoading(false);
    }
  };

  const setWebhook = async () => {
    try {
      setLoading(true);
      const response = await fetch(`${backendUrl}/api/set_webhook`, {
        method: 'POST'
      });
      if (response.ok) {
        const data = await response.json();
        alert(`Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${data.url}`);
      } else {
        alert('–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook');
      }
    } catch (error) {
      alert('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
    } finally {
      setLoading(false);
    }
  };

  const getStatusColor = () => {
    switch (botStatus) {
      case 'online': return 'text-green-500';
      case 'offline': return 'text-red-500';
      default: return 'text-yellow-500';
    }
  };

  const getStatusText = () => {
    switch (botStatus) {
      case 'online': return '–û–Ω–ª–∞–π–Ω';
      case 'offline': return '–û—Ñ–ª–∞–π–Ω';
      default: return '–ü—Ä–æ–≤–µ—Ä–∫–∞...';
    }
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100">
      <div className="container mx-auto px-4 py-8">
        {/* Header */}
        <div className="text-center mb-12">
          <h1 className="text-4xl font-bold text-gray-800 mb-4">
            ü§ñ –°–µ–º–µ–π–Ω—ã–π –ë–æ—Ç-–ü–æ–º–æ—â–Ω–∏–∫
          </h1>
          <p className="text-lg text-gray-600 max-w-2xl mx-auto">
            –£–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –≤—Å–µ–π —Å–µ–º—å–∏ —Å –∞–Ω–∞–ª–∏–∑–æ–º –ø–∏—Ç–∞–Ω–∏—è, —Ñ–∏—Ç–Ω–µ—Å —Å–æ–≤–µ—Ç–∞–º–∏ –∏ –º–Ω–æ–≥–∏–º –¥—Ä—É–≥–∏–º
          </p>
        </div>

        {/* Bot Status */}
        <div className="max-w-4xl mx-auto mb-8">
          <div className="bg-white rounded-lg shadow-lg p-6">
            <div className="flex items-center justify-between mb-6">
              <div className="flex items-center">
                <div className={`w-4 h-4 rounded-full mr-3 ${botStatus === 'online' ? 'bg-green-500' : 'bg-red-500'}`}></div>
                <h2 className="text-xl font-semibold text-gray-800">–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞</h2>
              </div>
              <span className={`font-medium ${getStatusColor()}`}>
                {getStatusText()}
              </span>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div className="bg-gray-50 rounded-lg p-4">
                <h3 className="font-semibold text-gray-800 mb-2">Telegram Bot</h3>
                <p className="text-sm text-gray-600 mb-2">@DMPlove_bot</p>
                <a 
                  href="https://t.me/DMPlove_bot" 
                  target="_blank" 
                  rel="noopener noreferrer"
                  className="inline-block bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition-colors"
                >
                  –û—Ç–∫—Ä—ã—Ç—å –≤ Telegram
                </a>
              </div>
              
              <div className="bg-gray-50 rounded-lg p-4">
                <h3 className="font-semibold text-gray-800 mb-2">–ù–∞—Å—Ç—Ä–æ–π–∫–∞</h3>
                <p className="text-sm text-gray-600 mb-2">–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å webhook</p>
                <button 
                  onClick={setWebhook}
                  className="bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600 transition-colors"
                >
                  –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –±–æ—Ç–∞
                </button>
              </div>
            </div>
          </div>
        </div>

        {/* Features */}
        <div className="max-w-6xl mx-auto mb-8">
          <h2 className="text-2xl font-bold text-gray-800 mb-6 text-center">–§—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            <div className="bg-white rounded-lg shadow-lg p-6">
              <div className="text-3xl mb-4">üì∏</div>
              <h3 className="text-lg font-semibold text-gray-800 mb-2">–ê–Ω–∞–ª–∏–∑ –µ–¥—ã</h3>
              <p className="text-gray-600 text-sm">
                –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –µ–¥—ã —Å –ø–æ–¥—Å—á–µ—Ç–æ–º –∫–∞–ª–æ—Ä–∏–π, –ë–ñ–£ –∏ –≤–µ–¥–µ–Ω–∏–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
              </p>
            </div>

            <div className="bg-white rounded-lg shadow-lg p-6">
              <div className="text-3xl mb-4">üí™</div>
              <h3 className="text-lg font-semibold text-gray-800 mb-2">–§–∏—Ç–Ω–µ—Å —Å–æ–≤–µ—Ç—ã</h3>
              <p className="text-gray-600 text-sm">
                –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ñ–∏—Ç–Ω–µ—Å—É –∏ –ø–∏—Ç–∞–Ω–∏—é –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
              </p>
            </div>

            <div className="bg-white rounded-lg shadow-lg p-6">
              <div className="text-3xl mb-4">üë§</div>
              <h3 className="text-lg font-semibold text-gray-800 mb-2">–ü—Ä–æ—Ñ–∏–ª—å –∑–¥–æ—Ä–æ–≤—å—è</h3>
              <p className="text-gray-600 text-sm">
                –í–µ–¥–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ –∑–¥–æ—Ä–æ–≤—å–µ –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –¥–∏–Ω–∞–º–∏–∫–∏
              </p>
            </div>

            <div className="bg-white rounded-lg shadow-lg p-6">
              <div className="text-3xl mb-4">ü§ñ</div>
              <h3 className="text-lg font-semibold text-gray-800 mb-2">–ò–ò –ø–æ–º–æ—â–Ω–∏–∫</h3>
              <p className="text-gray-600 text-sm">
                –°–≤–æ–±–æ–¥–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ —Å ChatGPT —Å –≤—ã–±–æ—Ä–æ–º –º–æ–¥–µ–ª–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π –ø—Ä–æ–º–ø—Ç–æ–≤
              </p>
            </div>

            <div className="bg-white rounded-lg shadow-lg p-6">
              <div className="text-3xl mb-4">üé¨</div>
              <h3 className="text-lg font-semibold text-gray-800 mb-2">–§–∏–ª—å–º—ã –∏ —Å–µ—Ä–∏–∞–ª—ã</h3>
              <p className="text-gray-600 text-sm">
                –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Ñ–∏–ª—å–º–æ–≤ –∏ —Å–µ—Ä–∏–∞–ª–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π
              </p>
            </div>

            <div className="bg-white rounded-lg shadow-lg p-6">
              <div className="text-3xl mb-4">üìä</div>
              <h3 className="text-lg font-semibold text-gray-800 mb-2">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
              <p className="text-gray-600 text-sm">
                –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–∏—Ç–∞–Ω–∏—é –∑–∞ –¥–µ–Ω—å, –Ω–µ–¥–µ–ª—é –∏ –º–µ—Å—è—Ü
              </p>
            </div>
          </div>
        </div>

        {/* Instructions */}
        <div className="max-w-4xl mx-auto">
          <div className="bg-white rounded-lg shadow-lg p-6">
            <h2 className="text-xl font-semibold text-gray-800 mb-4">–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞</h2>
            <div className="space-y-4">
              <div className="flex items-start">
                <span className="bg-blue-100 text-blue-800 text-xs font-medium px-2.5 py-1 rounded-full mr-3 mt-0.5">1</span>
                <div>
                  <h3 className="font-medium text-gray-800">–ù–∞—á–Ω–∏—Ç–µ –¥–∏–∞–ª–æ–≥</h3>
                  <p className="text-sm text-gray-600">–ù–∞–∂–º–∏—Ç–µ /start –≤ —á–∞—Ç–µ —Å –±–æ—Ç–æ–º</p>
                </div>
              </div>
              
              <div className="flex items-start">
                <span className="bg-blue-100 text-blue-800 text-xs font-medium px-2.5 py-1 rounded-full mr-3 mt-0.5">2</span>
                <div>
                  <h3 className="font-medium text-gray-800">–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –µ–¥—ã</h3>
                  <p className="text-sm text-gray-600">–ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–ª—é–¥–æ –∏ –ø–æ–¥—Å—á–∏—Ç–∞–µ—Ç –∫–∞–ª–æ—Ä–∏–∏</p>
                </div>
              </div>
              
              <div className="flex items-start">
                <span className="bg-blue-100 text-blue-800 text-xs font-medium px-2.5 py-1 rounded-full mr-3 mt-0.5">3</span>
                <div>
                  <h3 className="font-medium text-gray-800">–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å</h3>
                  <p className="text-sm text-gray-600">–£–∫–∞–∂–∏—Ç–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π</p>
                </div>
              </div>
              
              <div className="flex items-start">
                <span className="bg-blue-100 text-blue-800 text-xs font-medium px-2.5 py-1 rounded-full mr-3 mt-0.5">4</span>
                <div>
                  <h3 className="font-medium text-gray-800">–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏</h3>
                  <p className="text-sm text-gray-600">–ü–æ–ª—É—á–∞–π—Ç–µ —Å–æ–≤–µ—Ç—ã, –æ–±—â–∞–π—Ç–µ—Å—å —Å –ò–ò, —Å–º–æ—Ç—Ä–∏—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É</p>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* Footer */}
        <div className="text-center mt-12 text-gray-600">
          <p>¬© 2024 –°–µ–º–µ–π–Ω—ã–π –ë–æ—Ç-–ü–æ–º–æ—â–Ω–∏–∫. –†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –±–∞–∑–µ OpenAI –∏ Telegram API</p>
        </div>
      </div>
    </div>
  );
}

export default App;